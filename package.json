{
  "name": "nahmii-contracts",
  "version": "1.1.1-ropsten.1",
  "description": "Smart contracts for nahmii",
  "main": "truffle.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "build": "truffle compile",
    "build:all": "truffle compile --all",
    "clean:contract_abstractions": "rm -f build/contracts/*",
    "clean:events": "rm -f events/*",
    "deploy": "npm run deploy:test",
    "deploy:ci": "truffle migrate",
    "deploy:ganache": "truffle compile && truffle migrate --network ganache",
    "deploy:ganache-cli": "truffle compile && truffle migrate --network ganache-cli",
    "deploy-reset:ganache-cli": "truffle compile && truffle migrate --reset --network ganache-cli",
    "deploy:main": "truffle migrate --network mainnet",
    "deploy:test": "truffle migrate --network testnet",
    "docs": "soldoc",
    "exec:add_signer": "truffle exec scripts/truffle/add_signer.js",
    "exec:check:ropsten": "truffle exec scripts/truffle/check.js --network ropsten-infura",
    "exec:deploy_testerc20": "truffle exec scripts/truffle/deploy_testerc20.js",
    "exec:export_driip_settlement_state:mainnet": "truffle exec scripts/truffle/export_driip_settlement_state.js --network mainnet-hubii",
    "exec:export_null_settlement_state:mainnet": "truffle exec scripts/truffle/export_null_settlement_state.js --network mainnet-hubii",
    "exec:ganache-cli": "ganache-cli -l 8000000 -e 1000",
    "exec:import_driip_settlement_state:mainnet": "truffle exec scripts/truffle/import_driip_settlement_state.js --network mainnet-hubii",
    "exec:import_null_settlement_state:mainnet": "truffle exec scripts/truffle/import_null_settlement_state.js --network mainnet-hubii",
    "exec:mint_erc20_tokens": "truffle exec scripts/truffle/mint_erc20_tokens.js",
    "exec:register_currency": "truffle exec scripts/truffle/register_currency.js",
    "exec:release_nii_tokens": "truffle exec scripts/truffle/release_nii_tokens.js",
    "exec:script:mainnet": "truffle compile && truffle exec scripts/truffle/script_template.js --network mainnet-infura",
    "exec:script:ropsten": "truffle compile && truffle exec scripts/truffle/script_template.js --network ropsten-infura",
    "exec:update-require-messages": "node scripts/node/update-require-messages",
    "postinstall": "cd node_modules/truffle && npm install solc@^0.5.8 && cd ../.. && npm dedupe",
    "pretest": "npm run exec:update-require-messages",
    "sample:events": "concurrently --raw --success first --kill-others 'ganache-cli -l 8000000 -e 1000 >/dev/null' 'truffle compile && truffle test ./sample/*.js'",
    "symlink:contract_abstractions": "npm run symlink:contract_abstractions_contracts && npm run symlink:contract_abstractions_events",
    "symlink:contract_abstractions_contracts": "rm -rf build/contracts && mkdir -p build && ln -vs $(pwd)/node_modules/nahmii-contract-abstractions/build/contracts build/contracts",
    "symlink:contract_abstractions_events": "rm -rf events && ln -vs $(pwd)/node_modules/nahmii-contract-abstractions/events events",
    "symlink:contract_abstractions:ropsten": "npm run symlink:contract_abstractions_contracts:ropsten && npm run symlink:contract_abstractions_events:ropsten",
    "symlink:contract_abstractions_contracts:ropsten": "rm -rf build/contracts && mkdir -p build && ln -vs $(pwd)/node_modules/nahmii-contract-abstractions-ropsten/build/contracts build/contracts",
    "symlink:contract_abstractions_events:ropsten": "rm -rf events && ln -vs $(pwd)/node_modules/nahmii-contract-abstractions-ropsten/events events",
    "test": "npm run test:unit",
    "test:deploy": "concurrently --success first --kill-others 'npm run exec:ganache-cli' 'npm run deploy-reset:ganache-cli'",
    "test:scripts": "mocha scripts/**/*.spec.js",
    "test:unit": "concurrently --raw --success first --kill-others 'npm run exec:ganache-cli >/dev/null' 'truffle compile && truffle test'",
    "test:unit:ganache": "truffle compile && truffle test --network ganache",
    "version:compiler": "solcjs --version",
    "version:truffle": "truffle version"
  },
  "keywords": [
    "nahmii",
    "smart contracts",
    "ethereum"
  ],
  "author": "Hubii",
  "license": "LGPL-3.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hubiinetwork/nahmii-contracts.git"
  },
  "dependencies": {
    "async": "^2.6.0",
    "debug": "^4.1.1",
    "ethers": "^3.0.29",
    "ganache-cli": "^6.4.3",
    "moment": "^2.23.0",
    "omphalos-commons": "github:hubiinetwork/omphalos-commons#develop",
    "openzeppelin-solidity": "^2.2.0",
    "solc": "^0.5.8",
    "solidity-util": "github:hubiinetwork/solidity-util",
    "truffle": "^4.1.15",
    "truffle-hdwallet-provider": "0.0.6",
    "truffle-hdwallet-provider-privkey": "^0.3.0",
    "yargs": "^13.2.4"
  },
  "devDependencies": {
    "bluebird": "^3.5.4",
    "bn-chai": "^1.0.1",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "concurrently": "^4.1.0",
    "ethereumjs-util": "^5.2.0",
    "mocha-teamcity-reporter": "^2.5.0",
    "mock-fs": "github:hubiinetwork/mock-fs",
    "n-readlines": "^1.0.0",
    "sinon": "^5.0.1",
    "sinon-chai": "^3.0.0",
    "solhint": "^1.1.10"
  },
  "requireEnumerate": [
    "AccrualBenefactor.sol",
    "BalanceTrackable.sol",
    "BalanceTracker.sol",
    "BlockNumbDisdIntsLib.sol",
    "BlockNumbFiguresLib.sol",
    "BlockNumbIntsLib.sol",
    "BlockNumbReferenceCurrenciesLib.sol",
    "BlockNumbUintsLib.sol",
    "CancelOrdersChallengable.sol",
    "CancelOrdersChallenge.sol",
    "ClientFundable.sol",
    "CommunityVotable.sol",
    "Configurable.sol",
    "ConfigurableOperational.sol",
    "Configuration.sol",
    "CurrenciesLib.sol",
    "DriipSettlementByPayment.sol",
    "DriipSettlementChallengeByPayment.sol",
    "DriipSettlementChallengeState.sol",
    "DriipSettlementDisputeByPayment.sol",
    "DriipSettlementState.sol",
    "ERC20TransferController.sol",
    "ERC721TransferController.sol",
    "FraudChallengable.sol",
    "FraudChallengeByPayment.sol",
    "FraudChallengeBySuccessivePayments.sol",
    "NullSettlement.sol",
    "NullSettlementChallengeByPayment.sol",
    "NullSettlementChallengeState.sol",
    "NullSettlementDisputeByPayment.sol",
    "PartnerBenefactorable.sol",
    "PartnerFund.sol",
    "PaymentHashable.sol",
    "RevenueFund.sol",
    "RevenueToken.sol",
    "RevenueTokenManager.sol",
    "SecurityBond.sol",
    "SecurityBondable.sol",
    "SignerManageable.sol",
    "SignerManager.sol",
    "TokenHolderRevenueFund.sol",
    "TokenMultiTimelock.sol",
    "TradeHashable.sol",
    "TransactionTrackable.sol",
    "TransactionTracker.sol",
    "TransferControllerManageable.sol",
    "TransferControllerManager.sol",
    "TxHistoryLib.sol",
    "Validatable.sol",
    "ValidatableV2.sol",
    "WalletLockable.sol"
  ]
}
